[
  {
    "id": 1,
    "question": "¿Cuál es la manera correcta de declarar una constante en JavaScript?",
    "code": "const x = 5;\nconsole.log(x); // Imprime 5",
    "answers": ["let x = 5;", "var x = 5;", "const x = 5;", "x := 5;"],
    "correctAnswer": 2
  },
  {
    "id": 2,
    "question": "¿Qué resultado tiene la siguiente operación en JavaScript?",
    "code": "console.log(2 + '2'); // ¿Qué imprime?",
    "answers": ["4", "'22'", "NaN", "'4'"],
    "correctAnswer": 1
  },
  {
    "id": 3,
    "question": "En React, ¿qué hook se utiliza para manejar estado?",
    "code": "import { useState } from 'react';\n\nconst [count, setCount] = useState(0);",
    "answers": ["useState", "useEffect", "useContext", "useReducer"],
    "correctAnswer": 0
  },
  {
    "id": 4,
    "question": "¿Cuál es la salida de este código en Python?",
    "code": "print(type([]) == list)  # ¿Qué devuelve?",
    "answers": ["True", "False", "list", "None"],
    "correctAnswer": 0
  },
  {
    "id": 5,
    "question": "¿Qué hace el método `.map()` en JavaScript?",
    "code": "const nums = [1, 2, 3];\nconst doubled = nums.map(n => n * 2);\nconsole.log(doubled); // [2, 4, 6]",
    "answers": [
      "Filtra un array",
      "Transforma un array y devuelve uno nuevo",
      "Elimina elementos de un array",
      "Ordena un array"
    ],
    "correctAnswer": 1
  },
  {
    "id": 6,
    "question": "¿Cómo se define una función anónima en JavaScript?",
    "code": "const myFunc = function() {\n  console.log('Hola');\n}",
    "answers": [
      "function myFunc() {}",
      "const myFunc = function() {}",
      "let myFunc() => {}",
      "func myFunc() {}"
    ],
    "correctAnswer": 1
  },
  {
    "id": 7,
    "question": "¿Cuál es el propósito del operador `===` en JavaScript?",
    "code": "console.log(5 === '5'); // false\nconsole.log(5 === 5);   // true",
    "answers": [
      "Comparar valores y tipo de datos",
      "Solo comparar valores",
      "Asignar valores",
      "Incrementar valores"
    ],
    "correctAnswer": 0
  },
  {
    "id": 8,
    "question": "En CSS, ¿cómo seleccionas todos los elementos `<p>` dentro de un `<div>`?",
    "code": "div p {\n  color: blue;\n}",
    "answers": ["div p {}", "p div {}", "div > p {}", "#div p {}"],
    "correctAnswer": 0
  },
  {
    "id": 9,
    "question": "¿Qué imprime este código en JavaScript?",
    "code": "console.log([1, 2, 3].includes(2)); // ¿Qué imprime?",
    "answers": ["true", "false", "2", "undefined"],
    "correctAnswer": 0
  },
  {
    "id": 10,
    "question": "En TypeScript, ¿cómo defines una variable que puede ser un número o undefined?",
    "code": "let x: number | undefined;\n\nx = 42;\nconsole.log(x);",
    "answers": [
      "let x: number;",
      "let x: number | undefined;",
      "let x?: number;",
      "let x = number | undefined;"
    ],
    "correctAnswer": 1
  }
]
