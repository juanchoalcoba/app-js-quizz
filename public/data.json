[
  {
    "id": 1,
    "question": "¿Cuál es la manera correcta de declarar una constante en JavaScript?",
    "answers": ["let x = 5;", "var x = 5;", "const x = 5;", "x := 5;"],
    "correctAnswer": 2
  },
  {
    "id": 2,
    "question": "¿Qué resultado tiene la siguiente operación en JavaScript?",
    "code": "console.log(2 + '2'); // ¿Qué imprime?",
    "answers": ["4", "'22'", "NaN", "'4'"],
    "correctAnswer": 1
  },
  {
    "id": 3,
    "question": "En React con TypeScript, ¿qué hook se utiliza para manejar el estado local?",
    "answers": ["useState", "useEffect", "useContext", "useReducer"],
    "correctAnswer": 0
  },
  {
    "id": 4,
    "question": "¿Qué imprime el siguiente código en JavaScript?",
    "code": "console.log(typeof null);",
    "answers": ["'null'", "'undefined'", "'object'", "'string'"],
    "correctAnswer": 2
  },
  {
    "id": 5,
    "question": "¿Qué hace el método `.map()` en JavaScript?",
    "code": "const nums = [1, 2, 3];\nconst doubled = nums.map(n => n * 2);\nconsole.log(doubled);",
    "answers": [
      "Filtra un array",
      "Transforma un array y devuelve uno nuevo",
      "Elimina elementos de un array",
      "Ordena un array"
    ],
    "correctAnswer": 1
  },
  {
    "id": 6,
    "question": "¿Cuál de las siguientes opciones define correctamente una función anónima en JavaScript?",
    "answers": [
      "function myFunc() {}",
      "const myFunc = function() {}",
      "let myFunc() => {}",
      "func myFunc() {}"
    ],
    "correctAnswer": 1
  },
  {
    "id": 7,
    "question": "¿Cuál es el propósito del operador `===` en JavaScript?",
    "answers": [
      "Comparar valores y tipo de datos",
      "Solo comparar valores",
      "Asignar valores",
      "Comparar solo objetos"
    ],
    "correctAnswer": 0
  },
  {
    "id": 8,
    "question": "¿Qué valor devuelve el siguiente código?",
    "code": "Boolean('false');",
    "answers": ["true", "false", "undefined", "Error"],
    "correctAnswer": 0
  },
  {
    "id": 9,
    "question": "¿Qué imprime este código en JavaScript?",
    "code": "console.log([1, 2, 3].includes(2));",
    "answers": ["true", "false", "2", "undefined"],
    "correctAnswer": 0
  },
  {
    "id": 10,
    "question": "En TypeScript, ¿cómo defines una variable que puede ser un número o undefined?",
    "answers": [
      "let x: number;",
      "let x: number | undefined;",
      "let x?: number;",
      "let x = number | undefined;"
    ],
    "correctAnswer": 1
  },
  {
    "id": 11,
    "question": "¿Qué tipo de valor devuelve `Array.find()` en JavaScript?",
    "answers": [
      "Un nuevo array con los elementos encontrados",
      "El primer elemento que cumple la condición o undefined",
      "Un booleano indicando si existe el valor",
      "La posición del elemento en el array"
    ],
    "correctAnswer": 1
  },
  {
    "id": 12,
    "question": "¿Qué salida produce este código en TypeScript?",
    "code": "let a: unknown = 'hola';\nlet b: string = a;",
    "answers": [
      "Compila sin errores",
      "Error de tipo en la asignación",
      "Retorna undefined",
      "Transforma 'a' en string automáticamente"
    ],
    "correctAnswer": 1
  },
  {
    "id": 13,
    "question": "¿Cuál de las siguientes NO es una palabra reservada en JavaScript?",
    "answers": ["this", "static", "await", "main"],
    "correctAnswer": 3
  },
  {
    "id": 14,
    "question": "¿Qué imprime este código en JavaScript?",
    "code": "console.log(0 == false, 0 === false);",
    "answers": ["true true", "true false", "false true", "false false"],
    "correctAnswer": 1
  },
  {
    "id": 15,
    "question": "¿Qué operador se utiliza en TypeScript para verificar si una propiedad existe en un objeto?",
    "code": "const obj = { name: 'Juan' };\nconsole.log('name' in obj);",
    "answers": ["exist", "contains", "in", "has"],
    "correctAnswer": 2
  }
]
